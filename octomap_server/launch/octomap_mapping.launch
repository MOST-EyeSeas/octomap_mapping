<!-- 
  Example launch file for octomap_server mapping: 
  Listens to incoming PointCloud2 data and incrementally builds an octomap. 
  The data is sent out in different representations. 

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details  
-->
<launch>



  <node name="statistical_outlier_removal"
        pkg="nodelet" type="nodelet"
        args="standalone pcl/StatisticalOutlierRemoval">
    <!-- <remap from="~input" to="voxel_grid/output" /> -->
    <remap from="~input" to="/orb_slam3/all_points" />
    <rosparam>
      mean_k: 10
      stddev: 1.0
    </rosparam>
  </node>

  <test test-name="test_statistical_outlier_removal"
        name="test_statistical_outlier_removal"
        pkg="rostest" type="hztest">
    <rosparam>
      topic: /statistical_outlier_removal/output
      hz: 20
      hzerror: 15
      test_duration: 5.0
    </rosparam>
  </test>





	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
		<param name="resolution" value="0.05" />
		
		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<!-- <param name="frame_id" type="string" value="odom_combined" /> -->
		<param name="frame_id" type="string" value="world" />
		
		<!-- maximum range to integrate (speedup!) -->
		<param name="sensor_model/max_range" value="5.0" />
		
		<!-- data source to integrate (PointCloud2) -->
		<!-- <remap from="cloud_in" to="/narrow_stereo/points_filtered2" /> -->
		<!-- <remap from="cloud_in" to="/orb_slam3/all_points" /> -->
		<remap from="cloud_in" to="/statistical_outlier_removal/output" />

		<param name="base_frame_id" value="world" />
	
	</node>
</launch>